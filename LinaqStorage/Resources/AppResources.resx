<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="LoginPage_Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Message_FilleAllFields" xml:space="preserve">
    <value>Fill in all fields.</value>
  </data>
  <data name="Message_LoginError" xml:space="preserve">
    <value>Login error.</value>
  </data>
  <data name="Message_NewPasswordCantBeSame" xml:space="preserve">
    <value>New password can not be the same as old one.</value>
  </data>
  <data name="Message_OldPasswordDoesntMatch" xml:space="preserve">
    <value>Old password doesnt match.</value>
  </data>
  <data name="Message_PasswordsDoesntMatch" xml:space="preserve">
    <value>Provided passwords doesnt match.</value>
  </data>
  <data name="Message_PasswordTooShort" xml:space="preserve">
    <value>Password must contain at least 8 characters.</value>
  </data>
  <data name="Message_WrongPassword" xml:space="preserve">
    <value>Provided password is incorrect.</value>
  </data>
  <data name="Message_WrongPasswrdShort" xml:space="preserve">
    <value>Wrong password</value>
  </data>
  <data name="NavigationBar_Contact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="NavigationBar_Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="PasswordPage_ChangePassword" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="PasswordPage_ConfirmNewPassword" xml:space="preserve">
    <value>Confirm New Password</value>
  </data>
  <data name="PasswordPage_NewPassword" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="PasswordPage_OldPassword" xml:space="preserve">
    <value>Old Password</value>
  </data>
  <data name="PasswordPage_PasswordReset" xml:space="preserve">
    <value>Password reset</value>
  </data>
  <data name="PasswordPage_PasswordResetInfoLoseData" xml:space="preserve">
    <value>The password reset operation will result in the loss of all data.</value>
  </data>
  <data name="PasswordPage_PasswordResetSucessfully" xml:space="preserve">
    <value>Password reseted sucessfully</value>
  </data>
  <data name="PasswordPage_ResetPassword" xml:space="preserve">
    <value>Reset Password</value>
  </data>
  <data name="PasswordPage_SavePassword" xml:space="preserve">
    <value>Save Password</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Save_as" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SettingsPage_Browse" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="SettingsPage_ChangePassword" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="SettingsPage_DeleteOriginalFile" xml:space="preserve">
    <value>Delete orignal file after encryption</value>
  </data>
  <data name="SettingsPage_EncryptionMethod" xml:space="preserve">
    <value>Encryption method</value>
  </data>
  <data name="SettingsPage_Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="SettingsPage_Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="SettingsPage_SelectFolder" xml:space="preserve">
    <value>Select folder</value>
  </data>
  <data name="SettingsPage_StoragePath" xml:space="preserve">
    <value>Storage path</value>
  </data>
  <data name="SettingsPage_UseRSA" xml:space="preserve">
    <value>Use RSA to encrypt key.</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="CantOpenFile" xml:space="preserve">
    <value>Can not open this file.</value>
  </data>
  <data name="EncryptDate" xml:space="preserve">
    <value>Encryption Date</value>
  </data>
  <data name="EncryptMethod" xml:space="preserve">
    <value>Encryption Method</value>
  </data>
  <data name="FileExt" xml:space="preserve">
    <value>File Extension</value>
  </data>
  <data name="FileName" xml:space="preserve">
    <value>File Name</value>
  </data>
  <data name="Message_PasswordOneBigLetter" xml:space="preserve">
    <value>Password must contain at least 1 big letter.</value>
  </data>
  <data name="Message_PasswordOneNumber" xml:space="preserve">
    <value>Password must contain at least 1 number.</value>
  </data>
  <data name="Message_PasswordOneSymbol" xml:space="preserve">
    <value>Password must contain at least 1 symbol.</value>
  </data>
</root>